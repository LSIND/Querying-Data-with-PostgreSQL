---------------------------------------------------------------------
-- LAB 07
--
-- Exercise 1 (Solution)
---------------------------------------------------------------------

---------------------------------------------------------------------
-- Task 1
-- 
-- Выполните код ниже для создания новой таблицы extracustomers. 
---------------------------------------------------------------------

CREATE TABLE public.extracustomers(
	custid int GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) NOT NULL,
	fullname varchar(25) NOT NULL,
	city varchar(15) NOT NULL,
	country varchar(15) NOT NULL,
    discount numeric(4,2) NOT NULL,
CONSTRAINT PK_ECustomers PRIMARY KEY(custid)
); 


---------------------------------------------------------------------
-- Task 2
-- 
-- Напишите запрос на вставку одной записи в таблицу extracustomers со следующей информацией:
-- 'Иван Иванов', 'Москва', 'Россия', 0.4

---------------------------------------------------------------------

INSERT INTO public.extracustomers (fullname, city, country, discount )
VALUES ('Иван Иванов', 'Москва', 'Россия', 0.4);

---------------------------------------------------------------------
-- Task 3
-- 
-- Напишите SELECT-запрос к таблице sales.customers, выводящий всех заказчиков из Германии и Франции.
-- Выведите только полное имя (вычисляемый столбец из companyname и contactname через двоеточие), город, страну. 
--
-- Результирующий набор сравните с Lab Exercise1 - Task3 Result.txt
---------------------------------------------------------------------

SELECT CONCAT(companyname, ': ', contactname) AS  fullname, city, country
FROM sales.customers
WHERE country IN ('Germany', 'France');


---------------------------------------------------------------------
-- Task 4
-- 
-- Используя SELECT-запрос задания 3 вставьте данные в таблицу extracustomers. Скидка у всех заказчиков одинаковая - 40% (0.4).
--
-- Данный запрос должен завершиться ошибкой. Что это за ошибка? Почему так произошло?
-- Какие варианты решения проблемы возможны? Обсудите с коллегами и преподавателем.
---------------------------------------------------------------------

INSERT INTO public.extracustomers(fullname, city, country, discount )
SELECT CONCAT(companyname, ': ', contactname) AS  fullname, city, country, 0.4
FROM sales.customers
WHERE country IN ('Germany', 'France');


---------------------------------------------------------------------
-- Task 5
-- 
-- Обновите данные в таблице extracustomers, определив скидку 30% для всех заказчиков из Парижа.
--
---------------------------------------------------------------------

UPDATE public.extracustomers
SET discount = 0.3
WHERE city = 'Paris';

---------------------------------------------------------------------
-- Task 6
-- 
-- Удалите заказчика, созданного в Task2
--
---------------------------------------------------------------------

DELETE FROM public.extracustomers
WHERE custid = 1;


---------------------------------------------------------------------
-- Task 7
-- 
-- Скопируйте данные о продуктах дороже 50$ из таблицы production.products в несуществующую таблицу public.newproducts.
-- Выполните написанный Вами запрос повторно. Что произошло?
---------------------------------------------------------------------

SELECT * INTO public.newproducts
FROM production.products
WHERE unitprice > 50::money;


-- Проверьте данные в таблице public.newproducts
SELECT * FROM public.newproducts; -- 7 строк

---------------------------------------------------------------------
-- Task 8 *
-- 
-- Удалите некоторых заказчиков так, чтобы в таблице остались заказчики только по уникальным адресам (city, country).
-- Остаться должны заказчики с наименьшим custid

-- Если Вы все делали верно, то в таблице extracustomers должно остаться 20 строк.
---------------------------------------------------------------------

DELETE FROM public.extracustomers as e1
USING 
public.extracustomers as e2
WHERE e1.custid > e2.custid AND e2.city = e1.city and e2.country = e2.country;


-- Запросы для проверки

SELECT DISTINCT country, city FROM public.extracustomers;
SELECT * FROM public.extracustomers;

---------------------------------------------------------------------
-- Task 9
-- 
-- Выполните код ниже для удаления таблиц extracustomers, newproducts
---------------------------------------------------------------------

DROP TABLE IF EXISTS public.extracustomers;
DROP TABLE IF EXISTS public.newproducts;



-- ***** (Ошибка из Task 4)
----------------------
-- value too long for type character varying(25)
--
-- Вариант решения 1:
-- Изменение типа столбца fullname 

ALTER TABLE public.extracustomers 
ALTER COLUMN fullname TYPE VARCHAR(100);

----------------------
--
-- Вариант решения 2 (подойдет для лабораторной среды):
-- Удалить таблицу
-- Пересоздать ее, где fullname varchar(100)

DROP TABLE IF EXISTS public.extracustomers;

CREATE TABLE public.extracustomers(
	custid int GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) NOT NULL,
	fullname varchar(100) NOT NULL,
	city varchar(15) NOT NULL,
	country varchar(15) NOT NULL,
    discount numeric(4,2) NOT NULL,
CONSTRAINT PK_ECustomers PRIMARY KEY(custid)
); 

----------------------