---------------------------------------------------------------------
-- LAB 11
--
-- Exercise 3
---------------------------------------------------------------------

---------------------------------------------------------------------
-- Task 1
-- 
-- Напишите SELECT-запрос аналогичный Exercise 2 - Task 1, но с использованием CTE. Имя CTE - productsbeverages 
-- Используйте inline-псевдонимы.
--
-- Результирующий набор сравните с Lab Exercise3 - Task1 Result.txt
---------------------------------------------------------------------




---------------------------------------------------------------------
-- Task 2
-- 
-- Напишите SELECT-запрос к sales.ordervalues и получите список всех заказчиков и общую сумму покупок каждого их них в 2023 году.
-- Определите CTE с именем c2023 с использованием внешних псевдонимов custid и salesamt2023.
--   Если заказчик ничего не купил в 2023 году, в столбце salesamt2023 должно стоять значение 0. 
-- Соедините CTE с таблицей sales.customers и получите custid, contactname из sales.customers и salesamt2023 из c2023 CTE.
--
-- Результирующий набор сравните с Lab Exercise3 - Task2 Result.txt
---------------------------------------------------------------------




---------------------------------------------------------------------
-- Task 3
-- 
-- Напишите SELECT-запрос, выводящий custid и contactname из таблицы sales.customers. Также получите вычисляемые столбцы:
--  salesamt2023 - Общая сумма покупок за 2023 год (создайте CTE с именем c2023)
--  salesamt2022 - Общая сумма покупок за 2022 год (создайте CTE с именем c2022)
--  percentgrowth - процентный рост продаж 2023 года к 2022 (Если percentgrowth = NULL- отобразить 0). Упорядочить результат по этому столбцу
--
-- Результирующий набор сравните с Lab Exercise3 - Task3 Result.txt.
---------------------------------------------------------------------




---------------------------------------------------------------------
-- Task 4
-- 
-- Напишите SELECT-запрос, выводящий всех заказчиков (custid, companyname), которые покупали продукты категории Meat/Poultry, 
-- но ни разу не покупали продукты категории Seafood.
--
-- Результирующий набор сравните с Lab Exercise3 - Task4 Result.txt
---------------------------------------------------------------------




---------------------------------------------------------------------
-- Task 5 * 
-- 
-- Определите рекурсивное CTE, выводящее значение факториала числа (n!).
--  определите начальное значение в CTE (1, 1)
--  определите формулу факториала числа для заданного значения
--
---------------------------------------------------------------------




---------------------------------------------------------------------
-- Task 6 **
-- 
-- Есть следующий запрос: сумма продаж по дням за первые три месяца 2023 года
---- Обратите внимание, что в какие-то даты продаж вообще не было (между датами есть "дыры")
--  
--  Требуется вывести ВСЕ даты работы магазина за период: 
---- работаем без выходных
---- дата начала - 01 января 2023
---- дата окончания - 31 марта 2023
---- если в какой-то день продаж не было - в столбце sum_price вывести 0
--
-- Результирующий набор сравните с Lab Exercise3 - Task6 Result.txt.
---------------------------------------------------------------------

SELECT orderdate::date AS order_date, SUM(od.unitprice*od.qty) AS sum_price
       FROM sales.orders AS o
       JOIN sales.orderdetails AS od
       ON O.orderid = od.orderid
       WHERE orderdate >= '20230101' AND orderdate < '20230401'
       GROUP BY orderdate::date
       ORDER BY order_date;


-- Рекурсивное CTE



